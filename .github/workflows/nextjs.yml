# # Sample workflow for building and deploying a Next.js site to GitHub Pages
# #
# # To get started with Next.js see: https://nextjs.org/docs/getting-started
# #
# name: Deploy Next.js site to Pages

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false

# jobs:
#   # Build job
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Detect package manager
#         id: detect-package-manager
#         run: |
#           if [ -f "${{ github.workspace }}/yarn.lock" ]; then
#             echo "manager=yarn" >> $GITHUB_OUTPUT
#             echo "command=install" >> $GITHUB_OUTPUT
#             echo "runner=yarn" >> $GITHUB_OUTPUT
#             exit 0
#           elif [ -f "${{ github.workspace }}/package.json" ]; then
#             echo "manager=npm" >> $GITHUB_OUTPUT
#             echo "command=ci" >> $GITHUB_OUTPUT
#             echo "runner=npx --no-install" >> $GITHUB_OUTPUT
#             exit 0
#           else
#             echo "Unable to determine package manager"
#             exit 1
#           fi
#       - name: Setup Node
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20"
#           cache: ${{ steps.detect-package-manager.outputs.manager }}
#       - name: Setup Pages
#         uses: actions/configure-pages@v5
#         with:
#           # Automatically inject basePath in your Next.js configuration file and disable
#           # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
#           #
#           # You may remove this line if you want to manage the configuration yourself.
#           static_site_generator: next
#       - name: Restore cache
#         uses: actions/cache@v4
#         with:
#           path: |
#             .next/cache
#           # Generate a new cache whenever packages or source files change.
#           key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
#           # If source files changed but packages didn't, rebuild from a prior cache.
#           restore-keys: |
#             ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
#       - name: Install dependencies
#         run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
#       - name: Build with Next.js
#         run: ${{ steps.detect-package-manager.outputs.runner }} next build
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v3
#         with:
#           path: ./out

#   # Deployment job
#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v4
name: Build Next.js App

on:
  push:
    branches:
      - main  # Trigger on pushes to the `main` branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the `main` branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # This checks out your code

    - name: Set up Node.js
      uses: actions/setup-node@v3  # Sets up Node.js environment
      with:
        node-version: '16'  # You can change this to match the Node version you're using

    - name: Install dependencies
      run: npm install  # Install dependencies defined in package.json

    - name: Run Next.js Build
      run: npx --no-install next build  # Run the build command without installing dependencies globally

    - name: Upload Build Artifacts (optional)
      uses: actions/upload-artifact@v3
      with:
        name: next-build
        path: .next  # This uploads the .next folder (which contains the build output)

